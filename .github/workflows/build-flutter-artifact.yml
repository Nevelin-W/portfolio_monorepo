name: Build and Create Artifact

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository URL to clone'
        required: true
        default: 'https://github.com/Nevelin-W/portfolio_monorepo.git'
        type: string
      branch:
        description: 'Branch to clone'
        required: true
        default: 'dev'
        type: string
      project_path:
        description: 'Path to Flutter project within repository'
        required: true
        default: 'apps/myportfolio'
        type: string
      image_version:
        description: 'Version of docker image to use'
        required: true
        type: choice
        options:
          - v0.0.3-20250601-115608
      version:
        description: 'Custom version (optional - auto-generated if empty)'
        required: false
        type: string
      verbose:
        description: 'Enable verbose output'
        required: false
        type: boolean
        default: true

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME || 'username' }}/flutter-container:${{ github.event.inputs.image_version || 'latest' }}
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}

# Add permissions for OIDC token
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-version: ${{ steps.build.outputs.ARTIFACT_VERSION }}
      artifact-name: ${{ steps.build.outputs.ARTIFACT_NAME }}
      artifact-s3-key: ${{ steps.build.outputs.ARTIFACT_S3_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Updated AWS credentials configuration for OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pull Flutter Docker image
        run: docker pull ${{ env.DOCKER_IMAGE }}

      # - name: Build artifact in Docker container
      #   id: build
      #   run: |
      #     # Set version
      #     if [ -n "${{ github.event.inputs.version }}" ]; then
      #       export VERSION="${{ github.event.inputs.version }}"
      #     else
      #       export VERSION="$(date +%Y%m%d-%H%M%S)-$(git rev-parse --short HEAD)"
      #     fi
          
      #     echo "Building with version: $VERSION"
          
      #     # Create output file for container
      #     OUTPUT_FILE=$(mktemp)
          
      #     # Get AWS credentials from the environment (set by configure-aws-credentials action)
      #     docker run --rm \
      #       -e AWS_ACCESS_KEY_ID \
      #       -e AWS_SECRET_ACCESS_KEY \
      #       -e AWS_SESSION_TOKEN \
      #       -e AWS_REGION=${{ env.AWS_REGION }} \
      #       -e ARTIFACT_BUCKET=${{ secrets.ARTIFACT_BUCKET }} \
      #       -e REPO_URL=${{ github.event.inputs.repository || 'https://github.com/Nevelin-W/portfolio_monorepo.git' }} \
      #       -e REPO_BRANCH=${{ github.event.inputs.branch || github.ref_name }} \
      #       -e PROJECT_PATH=${{ github.event.inputs.project_path || 'apps/myportfolio' }} \
      #       -e VERSION="$VERSION" \
      #       -e VERBOSE=${{ github.event.inputs.verbose || 'true' }} \
      #       -e GITHUB_OUTPUT="/tmp/github_output" \
      #       -v "$OUTPUT_FILE:/tmp/github_output" \
      #       ${{ env.DOCKER_IMAGE }} /usr/local/bin/build.sh
          
      #     # Read outputs from container
      #     if [ -f "$OUTPUT_FILE" ]; then
      #       cat "$OUTPUT_FILE" >> $GITHUB_OUTPUT
      #     fi
          
      #     rm -f "$OUTPUT_FILE"
